image: node:20

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "pipeline"'
    - if: '$CI_PIPELINE_SOURCE == "trigger"'

# workflow:
#   rules:
#     - changes:
#         - src/**/*
#     - when: never

stages:
  - sync
  - build
  - deploy
    
include:
  - local: '.gitlab/ci/devireka-ci.yml'
  - local: '.gitlab/ci/ireka-ci.yml'  
  - local: '.gitlab/ci/ia-ci.yml'
  - local: '.gitlab/ci/aa-ci.yml'

# === GitHub Sync Job ===
sync_from_github:
  stage: sync
  tags:
    - reka-design
    
  image: alpine:latest
  script:
    - apk add --no-cache git bash

    # Git config
    - git config --global user.email "ci-sync@leap.com"
    - git config --global user.name "LEAP CI Sync Bot"
    
    # - git fetch --unshallow || true
    # - git checkout main
    # - git pull origin main --rebase || true

    # Clone GitHub source repo
    - git clone https://oauth2:${GITHUB_TOKEN}@github.com/benzourry/leap-design-v3.git github-source

    # Replace only selected files/folders
    - rm -rf src && mkdir src
    - cp -r github-source/src/* src/
    - cp github-source/angular*.json . || true
    - cp github-source/ngsw-config*.json . || true
    - cp github-source/package.json . || true
    - cp github-source/package-lock.json . || true
    - cp github-source/README.md . || true

    # Commit and push changes
    - git add src angular*.json ngsw-config*.json package.json package-lock.json README.md
    - |
      if git diff --cached --quiet; then
        echo "No changes to commit. Skipping next stages."
        echo "SHOULD_CONTINUE=false" >> sync_env.txt
      else
        git commit -m "Sync from GitHub [CI]"
        git push https://blmrazif:${GITLAB_PAT}@codebucket.unimas.my/blmrazif/leap-design.git HEAD:main
        echo "SHOULD_CONTINUE=true" >> sync_env.txt
      fi
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web"'         # manual run
      when: manual
    - if: '$CI_PIPELINE_SOURCE == "schedule"'    # scheduled run
      when: always
  # artifacts:
  #   reports:
  #     dotenv: sync_env.txt
